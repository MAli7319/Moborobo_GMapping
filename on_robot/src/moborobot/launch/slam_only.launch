<?xml version="1.0"?>

<launch>

    <param name="robot_description" command="$(find xacro)/xacro '$(find moborobot)/description/robot.udrf.xacro'" />

    <!-- Starting motors -->
    <!--<include file="$(find moborobot)/launch/motor_only.launch" />-->

    <!-- Starting rslidar -->
    <include file="$(find rslidar_sdk)/launch/start.launch" />

    <!-- Transfrom rslidar to base_link-->
    <node pkg="tf" type="static_transform_publisher" name="lidar_to_base_link" args="0 0 0 0 0 0 1 base_link rslidar 100" />
    <!--node pkg="tf" type="static_transform_publisher" name="odom_to_map" args="0 0 0 0 0 0 1 map odom 100" /-->
    
	<!--<node pkg="tf" type="static_transform_publisher" name="back_caster_1_to_base_link" args="0 0 0.4 0 0 0 1 base_link back_caster_1 100" />
	<node pkg="tf" type="static_transform_publisher" name="back_caster_2_to_base_link" args="0 0 0.4 0 0 0 1 base_link back_caster_2 100" />
	<node pkg="tf" type="static_transform_publisher" name="back_wheel_1_to_base_link" args="0 0 0.4 0 0 0 1 base_link back_wheel_1 100" />
	<node pkg="tf" type="static_transform_publisher" name="back_wheel_2_to_base_link" args="0 0 0.4 0 0 0 1 base_link back_wheel_2 100" />
	<node pkg="tf" type="static_transform_publisher" name="front_caster_1_to_base_link" args="-0.300 0.150 -0.190 0 0 0 1 base_link front_caster_1 100" />
	<node pkg="tf" type="static_transform_publisher" name="front_caster_2_to_base_link" args="0 0 0.4 0 0 0 1 base_link front_caster_2 100" />
	<node pkg="tf" type="static_transform_publisher" name="front_wheel_1_to_base_link" args="0.02 0.0 -0.11 0 0 0 1 base_link front_wheel_1 100" />
	<node pkg="tf" type="static_transform_publisher" name="front_wheel_2_to_base_link" args="0 0 0.4 0 0 0 1 base_link front_wheel_2 100" />
	<node pkg="tf" type="static_transform_publisher" name="left_wheel_to_base_link" args="0 0 0.4 0 0 0 1 base_link left_wheel 100" />
	<node pkg="tf" type="static_transform_publisher" name="right_wheel_to_base_link" args="0 0 0.4 0 0 0 1 base_link right_wheel 100" />-->
	
	<!--node pkg="tf" type="static_transform_publisher" name="base_link_to_map" args="0 0 0.06 0 0 0 1 map base_link 100" /-->

     <!-- push pointcloud_to_laserscan nodelet into sensor's nodelet manager-->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

		<remap from='cloud_in' to='/rslidar_points'/>
		<remap from='scan' to='/scan'/>
		
	
        <rosparam>
            target_frame: base_link # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: -0.4
            max_height: 1.0

            angle_min: -3.14 # -M_PI/2
            angle_max: 3.14 # M_PI/2
            angle_increment: 0.003 # M_PI/360.0
            scan_time: 0.1
            range_min: 0.2
            range_max: 100.0
            use_inf: false
            inf_epsilon: 1.0

            # Concurrency level, affects number of pointclouds queued for processing, thread number governed by nodelet manager
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>

    </node>
    

    

   <!-- rviz -->
   <node pkg="rviz" name="rviz" type="rviz" args="-d $(find slam_toolbox)/config/rviz4.rviz" />

</launch>
